@page "/Prestamos"
@page "/Prestamos/{PrestamoId:int}"

@inject IToastService toastService

<EditForm Model="Prestamo" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card-header">
        <h2>Registro de Prestamos</h2>
    </div>

    <div class="card-body">
        <form>

            <div class="form-group">
                <label for="PrestamoId">PrestamoId:</label>
                <div class="input-group">
                    <InputNumber @bind-Value="Prestamo.PrestamoId" class="form-control" />
                    <ValidationMessage For="@(() => Prestamo.PrestamoId)" />
                    <div class="input-group-append">
                        <button type="button" class="btn btn-primary" @onclick="Buscar">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                                <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z" />
                            </svg>Buscar
                        </button>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label>Fecha:</label>
                <div class="input-group">
                    <InputDate id="fecha" @bind-Value="Prestamo.Fecha" class="form-control" />
                    <ValidationMessage For="@(() => Prestamo.Fecha)" />
                </div>
            </div>

            <div class="form-group">
                <label>PersonaId</label>
                    <div class="input-group">
                         <InputNumber @bind-Value="Prestamo.PersonaId" class="form-control " />
                    </div>
                    <div><ValidationMessage For="@(() => Prestamo.PersonaId)" /></div>
            </div>

            <div class="form-group">
                <label>Concepto</label>
                <div class="input-group">
                    <SfMaskedTextBox @bind-Value="Prestamo.Concepto" Placeholder="Digite un concepto" class="form-control" />
                    <ValidationMessage For="@(() => Prestamo.Concepto)" />
                </div>
            </div>

            <div class="form-group">
                <label>Monto</label>
                <div class="input-group">
                    <SfNumericTextBox TValue="double" Decimals="2" Format="c2" @bind-Value="Prestamo.Monto" class="form-control" />
                    <ValidationMessage For="@(() => Prestamo.Monto)" />
                </div>
            </div>

            <div class="form-group">
                <label>Balance</label>
                <div class="input-group">
                    <SfNumericTextBox Readonly="true" TValue="double" Decimals="2" Format="c2" @bind-Value="Prestamo.Balance" class="form-control" />
                </div>
                <div><ValidationMessage For="@(() => Prestamo.Balance)" /></div>
            </div>

        </form>

        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>

                <button type="button" class="btn btn-lg btn-primary" @onclick="Limpiar">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-file-earmark" viewBox="0 0 16 16">
                        <path d="M14 4.5V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h5.5L14 4.5zm-3 0A1.5 1.5 0 0 1 9.5 3V1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V4.5h-2z" />
                    </svg>Nuevo
                </button>

                <button type="submit" class="btn btn-lg btn-success">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-save2" viewBox="0 0 16 16">
                        <path d="M2 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H9.5a1 1 0 0 0-1 1v4.5h2a.5.5 0 0 1 .354.854l-2.5 2.5a.5.5 0 0 1-.708 0l-2.5-2.5A.5.5 0 0 1 5.5 6.5h2V2a2 2 0 0 1 2-2H14a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h2.5a.5.5 0 0 1 0 1H2z" />
                    </svg>Guardar
                </button>

                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
                        <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z" />
                    </svg>Eliminar
                </button>

            </div>
        </div>

    </div>
</EditForm>

@code {
    [Parameter]
    public int PrestamoId { get; set; }

    private List<Personas> ListaPersonas = new List<Personas>();
    private Prestamos Prestamo = new Prestamos();

    protected override void OnInitialized()
    {
        Limpiar();
        Buscar();

        this.ListaPersonas = PersonasBLL.GetList();
    }

    private void Limpiar()
    {
        Prestamo = new Prestamos();
    }

    private void Buscar()
    {
        if (Prestamo.PrestamoId > 0)
        {
            var encontrado = PrestamosBLL.Buscar(Prestamo.PrestamoId);

            if (encontrado != null)
                this.Prestamo = encontrado;
            else
                toastService.ShowWarning("No encontrado");
        }
    }

    public void Guardar()
    {
        bool guardo;

        guardo = PrestamosBLL.Guardar(Prestamo);

        if (guardo)
        {
            Limpiar();
            toastService.ShowSuccess("Guardado correctamente");
        }
        else
            toastService.ShowError("No fue posible guardar");
    }

    public void Eliminar()
    {
        bool elimino;

        elimino = PrestamosBLL.Eliminar(Prestamo.PrestamoId);

        if (elimino)
        {
            Limpiar();
            toastService.ShowSuccess("Eliminado correctamente");
        }
        else
            toastService.ShowError("No fue posible eliminar");
    }

}
