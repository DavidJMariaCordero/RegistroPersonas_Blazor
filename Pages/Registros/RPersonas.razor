@page "/Personas"
@page "/Personas/{PersonaId:int}"

@inject IToastService toastService

    <EditForm Model="Persona" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />
        <div class="card-header">
            <h2>Registro de Personas</h2>
        </div>

        <div class="card-body">
            <form>

                <div class="form-group">
                    <label for="PersonaId">PersonaId</label>
                    <div class="input-group">
                        <InputNumber @bind-Value="Persona.PersonaId" class="form-control" />
                        <ValidationMessage For="@(() => Persona.PersonaId)" />
                        <div class="input-group-append">
                            <button type="button" class="btn btn-warning" @onclick="Buscar">
                                <i class="oi oi-magnifying-glass mr-2"/>Buscar
                            </button>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label for="Nombres">Nombres</label>
                    <div class="input-group">
                        <InputText @bind-Value="Persona.Nombres" class="form-control " />
                    </div>
                    <div><ValidationMessage For="@(() => Persona.Nombres)" /></div>
                </div>

                <div class="form-group">
                    <label for="Telefono">Teléfono</label>
                    <div class="input-group">
                        <SfMaskedTextBox @bind-Value="Persona.Telefono" Mask="[0-9][0-9][0-9]-[0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]" />
                        <ValidationMessage For="@(() => Persona.Telefono)" />
                    </div>
                </div>

                <div class="form-group">
                    <label for="Cedula">Cédula</label>
                    <div class="input-group">
                        <SfMaskedTextBox Width="20" @bind-Value="Persona.Cedula" Mask="[0-9][0-9][0-9]-[0-9][0-9][0-9][0-9][0-9][0-9][0-9]-[0-9]" />
                        <ValidationMessage For="@(() => Persona.Cedula)" />
                    </div>
                </div>

                <div class="form-group">
                    <label for="Direccion">Dirección</label>
                    <div class="input-group">
                        <InputText @bind-Value="Persona.Direccion" class="form-control" />
                    </div>
                    <div><ValidationMessage For="@(() => Persona.Nombres)" /></div>
                </div>

                <div class="form-group">
                    <label for="FechaNacimiento">Fecha de Nacimiento</label>
                    <div class="input-group">
                        <InputDate id="fecha" @bind-Value="Persona.FechaNacimiento" class="form-control" />
                        <ValidationMessage For="@(() => Persona.FechaNacimiento)" />
                    </div>
                </div>

                <div class="form-group">
                    <label>Balance</label>
                    <div class="input-group">
                        <SfNumericTextBox TValue="double" Decimals="2" Format="c2" Readonly="true" @bind-Value="Persona.Balance" class="form-control" />
                        <ValidationMessage For="@(() => Persona.Balance)" />
                    </div>
                </div>

            </form>

            <div class="card-footer">
                <div class="form-group text-center" display: inline-block>
                    
                    <button type="button" class="btn btn-lg btn-primary" @onclick="Limpiar">
                        <i class="oi oi-document mr-2"/>Nuevo
                    </button>
                    
                    <button type="submit" class="btn btn-lg btn-success">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-save2" viewBox="0 0 16 16">
                            <path d="M2 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H9.5a1 1 0 0 0-1 1v4.5h2a.5.5 0 0 1 .354.854l-2.5 2.5a.5.5 0 0 1-.708 0l-2.5-2.5A.5.5 0 0 1 5.5 6.5h2V2a2 2 0 0 1 2-2H14a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h2.5a.5.5 0 0 1 0 1H2z" />
                        </svg>Guardar
                    </button>
                    
                    <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">
                        <i class="oi oi-trash mr-2"></i>Eliminar
                    </button>

                </div>
            </div>

        </div>
    </EditForm>

    @code {

        [Parameter]
        public int PersonaId { get; set; }

        private Personas Persona = new Personas();
        protected override void OnInitialized()
        {
            Limpiar(); 

            Buscar(); 
        }
        private void Limpiar()
        {
            Persona = new Personas();
        }
        private void Buscar()
        {
            if (Persona.PersonaId > 0)
            {
                var encontrado = PersonasBLL.Buscar(Persona.PersonaId);

                if (encontrado != null)
                    this.Persona = encontrado;
                else
                    toastService.ShowWarning("No encontrado");
            }
        }

        public void Guardar()
        {
            bool guardo;

            guardo = PersonasBLL.Guardar(Persona);

            if (guardo)
            {
                Limpiar();
                toastService.ShowSuccess("Guardado correctamente");
            }
            else
                toastService.ShowError("No fue posible guardar");
        }

        public void Eliminar()
        {
            bool elimino;

            elimino = PersonasBLL.Eliminar(Persona.PersonaId);

            if (elimino)
            {
                Limpiar();
                toastService.ShowSuccess("Eliminado correctamente");
            }
            else
                toastService.ShowError("No fue posible eliminar");
        }

    }
